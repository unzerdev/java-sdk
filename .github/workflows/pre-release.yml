name: Pre-release Java SDK
on:
  workflow_dispatch:
    inputs:
      version:
        description: Release version
        type: string
        required: true
jobs:
  request-signoff:
    if: ${{ false }}
    name: Send management sign-off request
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Decode configuration
        env:
          CONFIG: ${{ secrets.RELEASE_AUTOMATOR_BASE64_CONFIG }}
        run: |
          echo $CONFIG | base64 --decode > release.yaml
      - name: Run release-automator
        uses: ./.github/actions/release-automator
        with:
          command: signoff
          version: ${{ inputs.version }}
  release-notes:
    name: Generate release notes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Decode configuration
        env:
          CONFIG: ${{ secrets.RELEASE_AUTOMATOR_BASE64_CONFIG }}
        run: |
          echo $CONFIG | base64 --decode > release.yaml
      - name: Run release-automator
        uses: ./.github/actions/release-automator
        with:
          command: notes
          version: ${{ inputs.version }}
      - name: Copy out release notes file
        run: |
          sudo cp target/ReleaseNotes.md ReleaseNotes.md
      - name: Attach release notes
        uses: actions/upload-artifact@v3
        with:
          name: ReleaseNotes
          path: ReleaseNotes.md
          retention-days: 5
  draft-release:
    name: Create Release Draft
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Create Draft via GitHub API
        run: |
          curl --location 'https://api.github.com/repos/${{ github.repository }}/releases' \
          --header 'Accept: application/vnd.github+json' \
          --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'X-GitHub-Api-Version: 2022-11-28' \
          --header 'Content-Type: application/json' \
          --data '{
              "tag_name": "${{ inputs.version }}",
              "target_commitish": "main",
              "name": "${{ inputs.version }}",
              "draft": true,
              "prerelease": false,
              "generate_release_notes": false,
              "body": "${{ toJSON(inputs.version) }}"
          }'
        