package com.unzer.payment;

/*-
 * #%L
 * Unzer Java SDK
 * %%
 * Copyright (C) 2020 - today Unzer E-Com GmbH
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.net.URL;

public class BasketItem {
	private String title;
	private String subTitle;
	private URL imageUrl;
	private String basketItemReferenceId;
	private Integer quantity;
	private BigDecimal amountPerUnitGross;
	private Integer vat;
	private Type type;
	private String unit;
	private BigDecimal amountDiscountPerUnitGross;

	/**
	 * The title of the basket item
	 */
	public String getTitle() {
		return title;
	}

	public BasketItem setTitle(String title) {
		this.title = title;
		return this;
	}

	/**
	 * The subtitle for the basket item
	 */
	public String getSubTitle() {
		return subTitle;
	}

	public void setSubTitle(String subTitle) {
		this.subTitle = subTitle;
	}

	/**
	 * URL to the basket item image, only used for the payment page.
	 */
	public URL getImageUrl() {
		return imageUrl;
	}

	public void setImageUrl(URL imageUrl) {
		this.imageUrl = imageUrl;
	}

	/**
	 * Unique basket item reference ID (within the basket).
	 * If not provided, an ID is automatically generated by Unzer.
	 */
	public String getBasketItemReferenceId() {
		return basketItemReferenceId;
	}

	public BasketItem setBasketItemReferenceId(String basketItemReferenceId) {
		this.basketItemReferenceId = basketItemReferenceId;
		return this;
	}

	/**
	 * Quantity of the basket item
	 */
	public Integer getQuantity() {
		return quantity;
	}

	public BasketItem setQuantity(Integer quantity) {
		this.quantity = quantity;
		return this;
	}

	/**
	 * Amount per unit including VAT.
	 * <p>
	 * Note: Discount is not included. Don’t include discounts here!
	 */
	public BigDecimal getAmountPerUnitGross() {
		return amountPerUnitGross;
	}

	/**
	 * Amount per unit including VAT.
	 * <p>
	 * Note: Discount is not included. Don’t include discounts here!
	 */
	public BasketItem setAmountPerUnitGross(BigDecimal amountPerUnitGross) {
		this.amountPerUnitGross = amountPerUnitGross;
		return this;
	}

	/**
	 * The VAT value for the basket item in percentage
	 */
	public Integer getVat() {
		return vat;
	}

	public BasketItem setVat(Integer vat) {
		this.vat = vat;
		return this;
	}

	/**
	 * The type of item in the basket. The valid values are goods, voucher, and shipment.
	 */
	public Type getType() {
		return type;
	}

	public void setType(Type type) {
		this.type = type;
	}

	/**
	 * @deprecated Use enum Type instead of plain string
	 */
	@Deprecated
	public void setType(String type) {
		this.type = Type.valueOf(type.toUpperCase());
	}

	/**
	 * The measuring unit for the basket item, e.g. pieces/Pc., kilogram/kg
	 */
	public String getUnit() {
		return unit;
	}

	public BasketItem setUnit(String unit) {
		this.unit = unit;
		return this;
	}


	/**
	 * Discount (incl. VAT) granted on the basketItems.amountGross.
	 * Positive amount is expected.
	 */
	public BigDecimal getAmountDiscountPerUnitGross() {
		return amountDiscountPerUnitGross;
	}

	public BasketItem setAmountDiscountPerUnitGross(BigDecimal amountDiscountPerUnitGross) {
		this.amountDiscountPerUnitGross = amountDiscountPerUnitGross;
		return this;
	}

	public enum Type {
		@SerializedName("")
		EMPTY,

		@SerializedName("goods")
		GOODS,

		@SerializedName("voucher")
		VOUCHER,

		@SerializedName("shipment")
		SHIPMENT
	}

	@Deprecated
	private BigDecimal amountDiscount;
	@Deprecated
	private BigDecimal amountGross;
	@Deprecated
	private BigDecimal amountVat;
	@Deprecated
	private BigDecimal amountPerUnit;
	@Deprecated
	private BigDecimal amountNet;
	@Deprecated
	private String participantId;

	/**
	 * @deprecated Use getAmountDiscountPerUnitGross instead
	 */
	@Deprecated
	public BigDecimal getAmountDiscount() {
		return amountDiscount;
	}

	/**
	 * @deprecated Use setAmountDiscountPerUnitGross instead
	 */
	@Deprecated
	public BasketItem setAmountDiscount(BigDecimal amountDiscount) {
		this.amountDiscount = amountDiscount;
		return this;
	}

	@Deprecated
	public BigDecimal getAmountGross() {
		return amountGross;
	}

	@Deprecated
	public BasketItem setAmountGross(BigDecimal amountGross) {
		this.amountGross = amountGross;
		return this;
	}

	@Deprecated
	public BigDecimal getAmountVat() {
		return amountVat;
	}

	@Deprecated
	public BasketItem setAmountVat(BigDecimal amountVat) {
		this.amountVat = amountVat;
		return this;
	}

	@Deprecated
	public BigDecimal getAmountPerUnit() {
		return amountPerUnit;
	}

	@Deprecated
	public BasketItem setAmountPerUnit(BigDecimal amountPerUnit) {
		this.amountPerUnit = amountPerUnit;
		return this;
	}

	@Deprecated
	public BigDecimal getAmountNet() {
		return amountNet;
	}

	@Deprecated
	public BasketItem setAmountNet(BigDecimal amountNet) {
		this.amountNet = amountNet;
		return this;
	}

	@Deprecated
	public String getParticipantId() {
		return participantId;
	}

	@Deprecated
	public void setParticipantId(String participantId) {
		this.participantId = participantId;
	}
}
